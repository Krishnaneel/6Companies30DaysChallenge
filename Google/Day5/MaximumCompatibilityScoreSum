Problem Link: https://leetcode.com/problems/maximum-compatibility-score-sum/

class Solution {
public:

    int findScore(vector<int> s,vector<int> m,int& q){
        int c=0;
        for(int i=0;i<q;i++){
            if(s[i]==m[i]) c++;
        }
        return c;
    }

    void solve(int i,int& n,int& q,vector<int>& pick,vector<vector<int>>& s, vector<vector<int>>& m,int temp,int& ans){
        if(i>=n){
            if(temp>ans) ans=temp;
            return;
        }
        
        for(int j=0;j<n;j++){
            if(pick[j]==0){
                pick[j]=1;
                solve(i+1,n,q,pick,s,m,temp+findScore(s[i],m[j],q),ans);
                pick[j]=0;
            }
        }
    }

    int maxCompatibilitySum(vector<vector<int>>& s, vector<vector<int>>& m) {
        int n=s.size();
        int q=s[0].size();
        vector<int>pick(n,0);
        int ans=0;
        solve(0,n,q,pick,s,m,0,ans);
        return ans;
    }
};
