Problem Link: https://leetcode.com/problems/matrix-block-sum/


class Solution {
public:
    vector<vector<int>> matrixBlockSum(vector<vector<int>>& mat, int k) {
        
        int n=mat.size(),m=mat[0].size();
        vector<vector<int>> ans(n,vector<int>(m));
        vector<vector<int>> grid(n,vector<int>(m));//sum_matt
        
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                
                int add1=(i-1>=0)?grid[i-1][j]:0; 
                int add2=(j-1>=0)?grid[i][j-1]:0;
                int intersection=(i-1>=0 && j-1>=0)?grid[i-1][j-1]:0;
                
                grid[i][j]=mat[i][j]+add1+add2-intersection;
            }
        }
        
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                
                int maxRow=min(n-1,i+k);
                int maxCol=min(m-1,j+k);
                
                int temp=grid[maxRow][maxCol];
                int minus1=(i-k-1>=0)?grid[i-k-1][maxCol]:0; 
                int minus2=(j-k-1>=0)?grid[maxRow][j-k-1]:0;
                int intersection=((i-k-1>=0)&&(j-k-1>=0))?grid[i-k-1][j-k-1]:0;
                
                temp=temp-minus1-minus2+intersection;
                
                ans[i][j]=temp;
                
            }
        }
        
        return ans;
        
    }
};
