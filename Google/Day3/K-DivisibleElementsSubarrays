Problem Link: https://leetcode.com/problems/k-divisible-elements-subarrays/


class Solution {
public:
    int countDistinct(vector<int>& nums, int k, int p) {
        set<vector<int>>st;
        int n=nums.size();

        for(int i=0;i<n;i++){
            vector<int>t;
            int c=0;
            for(int j=i;j<n;j++){
                t.push_back(nums[j]);
                if(nums[j]%p==0) c++;
                if(c<=k) st.insert(t);
                else break;
            }
        }

        return st.size();
    }
};
