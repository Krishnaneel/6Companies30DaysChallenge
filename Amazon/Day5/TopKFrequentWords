
class comp{
    public:
    bool operator()(pair<int,string>&a, pair<int,string>&b){
        if(a.first!=b.first)
            return (a.first>b.first);
        return (a.second<b.second);
    }
};


class Solution {
public:

    vector<string> topKFrequent(vector<string>& words, int k) {
        map<string,int>mp;
        for(auto it:words){
            mp[it]++;
        }
        priority_queue<pair<int, string>, vector<pair<int, string>>, comp> pq;
        for(auto it:mp){
            if(pq.size()<k){
                pq.push({it.second,it.first});
            }
            else{
                if(pq.top().first<it.second){
                    pq.pop();
                    pq.push({it.second,it.first});
                }
            }
        }
        vector<string>ans(k);
        for(int i=k-1;i>=0;i--){
            ans[i]=pq.top().second;
            pq.pop();
        }
        return ans;
    }
};
