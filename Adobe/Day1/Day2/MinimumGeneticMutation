Problem Link: https://leetcode.com/problems/minimum-genetic-mutation/


class Solution {
public:
    int minMutation(string start, string end, vector<string>& bank) {
        
        unordered_set<string> st;
        char m[4]={'A','C','G','T'};
        queue<pair<string,int>> q;
        q.push({start,0});
        
        for(int i=0;i<bank.size();i++){
            st.insert(bank[i]);
        }
        
        st.erase(start);
        
        while(!q.empty()){
            string word=q.front().first;
            int step=q.front().second;
            q.pop();
            
            if(word==end) return step;
            
            for(int i=0;i<word.length();i++){
                char ch=word[i];
                for(int j=0;j<4;j++){
                    word[i]=m[j];
                    if(st.find(word)!=st.end()){
                        q.push({word,step+1});
                        st.erase(word);
                    }
                }
                word[i]=ch;
            }
            
        }
        return -1;
    }
};
