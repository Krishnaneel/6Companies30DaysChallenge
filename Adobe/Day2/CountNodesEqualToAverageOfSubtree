Problem Link: https://leetcode.com/problems/count-nodes-equal-to-average-of-subtree/


/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:

    pair<int,int> help(TreeNode* root,int& ans){
        if(!root) return {0,0};
        auto lh=help(root->left,ans);
        auto rh=help(root->right,ans);
        int avg=(lh.first+rh.first+root->val)/(lh.second+rh.second+1);
        if(avg==root->val) ans++;
        return {lh.first+rh.first+root->val,lh.second+rh.second+1};
    }

    int averageOfSubtree(TreeNode* root) {
        int ans=0;
        help(root,ans);
        return ans;
    }
};
